/*
 * This file is generated by jOOQ.
 */
package jooq.generated.tables.records;


import jooq.generated.tables.Wallets;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class WalletsRecord extends UpdatableRecordImpl<WalletsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.wallets.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.wallets.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.wallets.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.wallets.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.wallets.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.wallets.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.wallets.balance</code>.
     */
    public void setBalance(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.wallets.balance</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WalletsRecord
     */
    public WalletsRecord() {
        super(Wallets.WALLETS);
    }

    /**
     * Create a detached, initialised WalletsRecord
     */
    public WalletsRecord(UUID id, OffsetDateTime createdAt, OffsetDateTime updatedAt, BigDecimal balance) {
        super(Wallets.WALLETS);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setBalance(balance);
        resetChangedOnNotNull();
    }
}
